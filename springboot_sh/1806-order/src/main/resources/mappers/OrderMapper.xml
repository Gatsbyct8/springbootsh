<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.order.mapper.OrderMapper">
<insert id="saveOrder" parameterType="Order">
<!--mysql是否支持多个insert语句同时执行-->
insert into order_list (order_id,user_id,status,create_time,update_time) 
values(#{orderId},#{userId},#{status},#{createTime},#{updateTime});

insert into order_detail (order_detail_id,commodity_id,count,create_time,update_time,main_image,price,commodity_name,order_id)
values 
<foreach collection="orderDetails" item="detail" separator=",">
(#{detail.orderDetailId},#{detail.commodityId},#{detail.count},#{detail.createTime},#{detail.updateTime},#{detail.mainImage},#{detail.price},#{detail.commodityName},(select order_id from order_list ORDER BY order_id DESC LIMIT 1))
</foreach>;
</insert>

<resultMap type="Order" id="orderRM">
<id property="orderId" column="order_id"/><!-- 主键 -->
<!-- 对多关系 -->
<collection property="orderDetails" javaType="ArrayList" ofType="OrderDetail" column="order_id" select="queryOrderDetailList">
</collection>
</resultMap>

<select id="queryOrder" parameterType="long" resultMap="orderRM">
select * from order_list where order_id=#{orderId};
</select>
<select id="queryOrderDetailList" parameterType="long" resultType="OrderDetail">
select * from order_detail where order_id=#{orderId}
</select>

<select id="findOrderList" parameterType="long" resultMap="orderRM">
select * from order_list where user_id=#{userId};
</select>

<select id="getOrder"  resultMap="orderRM">
select * from order_list where order_id=(select max(order_id) from order_list);
</select>

<!-- <select id="shippingByOrderId" parameterType="string" resultType="OrderShipping">
select * from tb_order_shipping where order_id=#{orderId};
</select>

<update id="paymentOrder" parameterType="date">
UPDATE tb_order SET STATUS=6,updated=now(),close_time=now(),end_time=now() 
WHERE STATUS=1 AND payment_type=1 AND created &lt;=#{date}
</update> -->

</mapper>








